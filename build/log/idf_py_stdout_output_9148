[1/9] Performing build step for 'bootloader'
[1/1] cd /home/lagoria/workspace/esp/project/esp32s3/master/build/bootloader/esp-idf/esptool_py && /home/lagoria/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/lagoria/workspace/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/lagoria/workspace/esp/project/esp32s3/master/build/bootloader/bootloader.bin
Bootloader binary size 0x5030 bytes. 0x2fd0 bytes (37%) free.
[2/7] Building C object esp-idf/lvgl_esp32_drivers/CMakeFiles/__idf_lvgl_esp32_drivers.dir/lvgl_tft/disp_spi.c.obj
/home/lagoria/workspace/esp/project/esp32s3/master/components/lvgl_esp32_drivers/lvgl_tft/disp_spi.c:301:1: warning: ignoring attribute 'section (".iram1.3")' because it conflicts with previous 'section (".iram1.2")' [-Wattributes]
  301 | {
      | ^
/home/lagoria/workspace/esp/project/esp32s3/master/components/lvgl_esp32_drivers/lvgl_tft/disp_spi.c:88:23: note: previous declaration here
   88 | static void IRAM_ATTR spi_ready(spi_transaction_t *trans);
      |                       ^~~~~~~~~
[3/7] Linking C static library esp-idf/lvgl_esp32_drivers/liblvgl_esp32_drivers.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable master.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/lagoria/workspace/esp/project/esp32s3/master/build/master.bin
[7/7] cd /home/lagoria/workspace/esp/project/esp32s3/master/build/esp-idf/esptool_py && /home/lagoria/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/lagoria/workspace/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/lagoria/workspace/esp/project/esp32s3/master/build/partition_table/partition-table.bin /home/lagoria/workspace/esp/project/esp32s3/master/build/master.bin
master.bin binary size 0x72990 bytes. Smallest app partition is 0x1e7800 bytes. 0x174e70 bytes (76%) free.
